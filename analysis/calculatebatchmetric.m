function [ result ] = calculatebatchmetric(filepath, metric)
%% CALCULATEBATCHMETRIC - Calculate a given metric over some results
%   Given a filepath and a metric iterate through the directory and all
%   files calculating the metric. Returns a NxM matrix of the metric for
%   each experiment results.
%
%   Parameters:
%       FILEPATH - (str) the directory with the results
%       METRIC - (func) A function for calculating a metric on results
%
%   Assumptions:
%       - Filenames are in the form 'filepath(1:end-2)_row_col.mat', where
%       row is the row the metric will be in and col is the column.
%       - Metric takes in a net, out object generated by a spiking net
%       file.
%       - Assumes filepath contains two trailing digits 
%

addpath(genpath('../'));
parpool(8); 
result_filename = 'mdrp_pfc';

files = dir([filepath, '/', filepath(1:end-2), '*.mat']);

result = [];
parfor file = files'
    fprintf('load file: %s\n', file.name);
    info = load([filepath, '/', file.name]);
    
    % parse row and col from filename
    filenamesplit = split(replace(file.name, '.mat', ''), '_');
    assert(numel(filenamesplit) == 3, sprintf('Too many values when splitting filename, unknown format: %s', file.name));
    
    row = str2num(filenamesplit{2});
    col = str2num(filenamesplit{3});
    
    result(row, col) = metric(info.net, info.out);
    
end

save(result_filename, 'result', '-v7.3');


end